{"ast":null,"code":"var _jsxFileName = \"/Users/admin_user/Desktop/React-useReducer/react-useReducer-start2/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer, useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ACTIONS = {};\n\nfunction App() {\n  _s();\n\n  function reducer(state, action) {}\n\n  const [todos, dispatch] = useReducer(reducer, []);\n\n  function increment() {\n    dispatch({\n      type: ACTIONS.increment\n    });\n  }\n\n  ;\n\n  function decrement() {\n    dispatch({\n      type: ACTIONS.decrement\n    });\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: increment,\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: state.count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: decrement,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n} // Pass in a reference to a callback that invokes dispatch not a direct dispatch invocation\n\n\n_s(App, \"e5LW/4uLPvWyBaaEOxnvXNL6Cyc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/admin_user/Desktop/React-useReducer/react-useReducer-start2/src/App.js"],"names":["React","useReducer","useState","ACTIONS","App","reducer","state","action","todos","dispatch","increment","type","decrement","count"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAO,WAAP;;AAKA,MAAMC,OAAO,GAAG,EAAhB;;AAOA,SAASC,GAAT,GAAe;AAAA;;AAEf,WAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC,CAM/B;;AAIC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,UAAU,CAACI,OAAD,EAAU,EAAV,CAApC;;AAGA,WAASK,SAAT,GAAqB;AACnBD,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAER,OAAO,CAACO;AAAhB,KAAD,CAAR;AACD;;AAAA;;AAED,WAASE,SAAT,GAAqB;AACnBH,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAER,OAAO,CAACS;AAAhB,KAAD,CAAR;AACD;;AAAA;AAID,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAGF,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAOJ,KAAK,CAACO;AAAb;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,OAAO,EAAED,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,C,CAED;;;GAlCSR,G;;KAAAA,G;AAoCT,eAAeA,GAAf","sourcesContent":["import React, { useReducer, useState } from 'react';\nimport './App.css';\n\n\n\n\nconst ACTIONS = {\n\n\n}\n\n\n\nfunction App() {\n\nfunction reducer(state, action) {\n\n\n\n\n\n}\n\n\n\n  const [todos, dispatch] = useReducer(reducer ,[]);\n\n\n  function increment() {\n    dispatch({ type: ACTIONS.increment })\n  };\n\n  function decrement() {\n    dispatch({ type: ACTIONS.decrement })\n  };\n\n\n\n  return (\n    <div className='container'>\n      <button onClick={ increment}>-</button>\n      <span>{state.count}</span>\n      <button onClick={decrement}>+</button>\n    </div>\n  );\n}\n\n// Pass in a reference to a callback that invokes dispatch not a direct dispatch invocation\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}