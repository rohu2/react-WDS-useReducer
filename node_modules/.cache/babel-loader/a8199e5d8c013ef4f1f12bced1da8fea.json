{"ast":null,"code":"var _jsxFileName = \"/Users/admin_user/Desktop/React-useReducer/react-useReducer-start2/src/App.js\",\n    _s = $RefreshSig$();\n\n// TUTORIAL AT MINUTE 13\nimport React, { useReducer, useState } from 'react';\nimport './App.css';\nimport Todo from './Todos';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet counter = 0; // with reducers you pass in a type which is the thing you want to do - which case you want to use\n// and then you pass in a payload which is the details you want your case to use\n\nconst ACTIONS = {\n  NEW_TODO: 'new todo',\n  TOGGLE_TODO: 'toggle todo',\n  DELETE_TODO: 'delete todo'\n};\n\nfunction App() {\n  _s();\n\n  const [todos, dispatch] = useReducer(reducer, []);\n  const [name, setName] = useState('');\n\n  function reducer(todos, action) {\n    switch (action.type) {\n      case ACTIONS.NEW_TODO:\n        return [...todos, newTodo(action.payload.name)];\n\n      case ACTIONS.TOGGLE_TODO:\n        console.log({\n          todos\n        });\n        return todos.map(todo => todo.id === action.payload.id ? { ...todo,\n          complete: !todo.complete\n        } : todo);\n\n      case ACTIONS.DELETE_TODO:\n        return deleteIt(action.payload.id);\n    }\n  }\n\n  function deleteIt(id) {\n    todos.filter(todo => todo.id !== id);\n  }\n\n  function newTodo(name) {\n    counter += 1;\n    console.log({\n      id: counter,\n      name: name\n    });\n    return {\n      id: counter,\n      name: name,\n      complete: false\n    };\n    console.log({\n      id: Date.now(),\n      name: name\n    });\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    dispatch({\n      type: ACTIONS.NEW_TODO,\n      payload: {\n        name: name\n      }\n    });\n    setName('');\n  }\n\n  console.log(todos); // payload is a propertu that gets passed into your dispatch/reducer along with type,\n  // type will switch you to the correct case in you dispatch/reducer and payload will have all the details that that case's function will need - payload is itself an object of all the properties / variables you will need in your case function\n  // try also with a wrapped invocation  form-widgets\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 1\n      }, this), todos.map(todo => /*#__PURE__*/_jsxDEV(Todo, {\n        todo: todo,\n        dispatch: dispatch\n      }, todo.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 20\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n} // Pass in a reference to a callback that invokes dispatch not a direct dispatch invocation\n\n\n_s(App, \"GaUZ+cD+sH211eZBBfAkdHRUf0k=\");\n\n_c = App;\nexport default App;\nexport { ACTIONS };\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/admin_user/Desktop/React-useReducer/react-useReducer-start2/src/App.js"],"names":["React","useReducer","useState","Todo","counter","ACTIONS","NEW_TODO","TOGGLE_TODO","DELETE_TODO","App","todos","dispatch","reducer","name","setName","action","type","newTodo","payload","console","log","map","todo","id","complete","deleteIt","filter","Date","now","handleSubmit","e","preventDefault","target","value","key"],"mappings":"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","sourcesContent":["// TUTORIAL AT MINUTE 13\n\n\nimport React, { useReducer, useState } from 'react';\nimport './App.css';\nimport Todo from './Todos'\n\nlet counter = 0;\n// with reducers you pass in a type which is the thing you want to do - which case you want to use\n// and then you pass in a payload which is the details you want your case to use\n\nconst ACTIONS = {\n\nNEW_TODO : 'new todo',\n\nTOGGLE_TODO : 'toggle todo',\n\nDELETE_TODO : 'delete todo',\n\n}\n\n\n\nfunction App() {\n\n\nconst [todos, dispatch] = useReducer(reducer ,[]);\nconst [name, setName] = useState('')\n\n\n\nfunction reducer(todos, action) {\n\nswitch(action.type){\n\ncase ACTIONS.NEW_TODO:\n  return [ ...todos, newTodo(action.payload.name)]\n\n\ncase ACTIONS.TOGGLE_TODO:\n  console.log({todos})\n  return todos.map( todo => todo.id === action.payload.id ? { ...todo, complete:!todo.complete }  : todo  )\n\n\ncase ACTIONS.DELETE_TODO:\n  return deleteIt(action.payload.id)\n\n\n\n}\n}\n\n\n\n\n\nfunction deleteIt(id){\n\ntodos.filter( todo => todo.id !== id  )\n\n}\n\nfunction newTodo(name){\n\n\n\ncounter+=1\nconsole.log({ id: counter , name:name})\nreturn { id: counter , name:name, complete:false }\nconsole.log({ id: Date.now() , name:name})\n\n}\n\n\n\n\nfunction handleSubmit(e) {\n\ne.preventDefault()\ndispatch({type: ACTIONS.NEW_TODO , payload:{ name:name }})\n\nsetName('')\n\n}\n \n\nconsole.log(todos)\n\n// payload is a propertu that gets passed into your dispatch/reducer along with type,\n// type will switch you to the correct case in you dispatch/reducer and payload will have all the details that that case's function will need - payload is itself an object of all the properties / variables you will need in your case function\n\n\n\n// try also with a wrapped invocation  form-widgets\n  return (\n    <div className='container'>\n      <form action=\"\" onSubmit={handleSubmit}  >\n\n\n\n<input \ntype=\"text\"\nvalue={name}\nonChange={ e => setName(e.target.value ) }\n/>\n\n{todos.map(todo => <Todo key={todo.key} todo={todo} dispatch={dispatch}/>)}\n\n\n\n      </form>\n    </div>\n  );\n}\n\n// Pass in a reference to a callback that invokes dispatch not a direct dispatch invocation\n\nexport default App;\nexport {ACTIONS}"]},"metadata":{},"sourceType":"module"}