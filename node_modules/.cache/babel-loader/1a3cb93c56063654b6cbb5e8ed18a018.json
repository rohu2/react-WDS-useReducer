{"ast":null,"code":"var _jsxFileName = \"/Users/admin_user/Desktop/React-useReducer/react-useReducer-start2/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer, useState } from 'react';\nimport './App.css'; // with reducers you pass in a type which is the thing you want to do - which case you want to use\n// and then you pass in a payload which is the details you want your case to use\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ACTIONS = {\n  NEW_TODO: 'new todo'\n};\n\nfunction App() {\n  _s();\n\n  function reducer(todos, action) {\n    switch (action.type) {\n      case ACTIONS.NEW_TODO:\n        return [...todos, newTodo(name)];\n    }\n  }\n\n  function newTodo(name) {\n    return {\n      id: Date.now(),\n      name: name,\n      complete: false\n    };\n  }\n\n  const [todos, dispatch] = useReducer(reducer, []);\n  const [name, setName] = useState(''); // function increment() {\n  //   dispatch({ type: ACTIONS.increment })\n  // };\n  // function decrement() {\n  //   dispatch({ type: ACTIONS.decrement })\n  // };\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    dispatch({\n      type: ACTIONS.NEW_TODO,\n      payload: {\n        name: name\n      }\n    });\n    setName('');\n  } // payload is a propertu that gets passed into your dispatch/reducer along with type,\n  // type will switch you to the correct case in you dispatch/reducer and payload will have all the details that that case's function will need - payload is itself an object of all the properties / variables you will need in your case function\n  // try also with a wrapped invocation\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n} // Pass in a reference to a callback that invokes dispatch not a direct dispatch invocation\n\n\n_s(App, \"GaUZ+cD+sH211eZBBfAkdHRUf0k=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/admin_user/Desktop/React-useReducer/react-useReducer-start2/src/App.js"],"names":["React","useReducer","useState","ACTIONS","NEW_TODO","App","reducer","todos","action","type","newTodo","name","id","Date","now","complete","dispatch","setName","handleSubmit","e","preventDefault","payload","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAO,WAAP,C,CAGA;AACA;;;AAEA,MAAMC,OAAO,GAAG;AAEhBC,EAAAA,QAAQ,EAAG;AAFK,CAAhB;;AAQA,SAASC,GAAT,GAAe;AAAA;;AAEf,WAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAEhC,YAAOA,MAAM,CAACC,IAAd;AAEA,WAAKN,OAAO,CAACC,QAAb;AACE,eAAO,CAAE,GAAGG,KAAL,EAAYG,OAAO,CAACC,IAAD,CAAnB,CAAP;AAHF;AAWC;;AAID,WAASD,OAAT,CAAiBC,IAAjB,EAAsB;AAEtB,WAAO;AAAEC,MAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL,EAAN;AAAmBH,MAAAA,IAAI,EAACA,IAAxB;AAA8BI,MAAAA,QAAQ,EAAC;AAAvC,KAAP;AAIC;;AAIC,QAAM,CAACR,KAAD,EAAQS,QAAR,IAAoBf,UAAU,CAACK,OAAD,EAAU,EAAV,CAApC;AACF,QAAM,CAACK,IAAD,EAAOM,OAAP,IAAkBf,QAAQ,CAAC,EAAD,CAAhC,CA9Be,CAgCb;AACA;AACA;AAEA;AACA;AACA;;AAGF,WAASgB,YAAT,CAAsBC,CAAtB,EAAyB;AAEzBA,IAAAA,CAAC,CAACC,cAAF;AACAJ,IAAAA,QAAQ,CAAC;AAACP,MAAAA,IAAI,EAAEN,OAAO,CAACC,QAAf;AAA0BiB,MAAAA,OAAO,EAAC;AAAEV,QAAAA,IAAI,EAACA;AAAP;AAAlC,KAAD,CAAR;AACAM,IAAAA,OAAO,CAAC,EAAD,CAAP;AAEC,GA/Cc,CAiDf;AACA;AAIA;;;AACE,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACE;AAAM,MAAA,MAAM,EAAC,EAAb;AAAgB,MAAA,QAAQ,EAAEC,YAA1B;AAAA,6BAIN;AACA,QAAA,IAAI,EAAC,MADL;AAEA,QAAA,KAAK,EAAEP,IAFP;AAGA,QAAA,QAAQ,EAAGQ,CAAC,IAAIF,OAAO,CAACE,CAAC,CAACG,MAAF,CAASC,KAAV;AAHvB;AAAA;AAAA;AAAA;AAAA;AAJM;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,C,CAED;;;GA3ESlB,G;;KAAAA,G;AA6ET,eAAeA,GAAf","sourcesContent":["import React, { useReducer, useState } from 'react';\nimport './App.css';\n\n\n// with reducers you pass in a type which is the thing you want to do - which case you want to use\n// and then you pass in a payload which is the details you want your case to use\n\nconst ACTIONS = {\n\nNEW_TODO : 'new todo',\n\n}\n\n\n\nfunction App() {\n\nfunction reducer(todos, action) {\n\nswitch(action.type){\n\ncase ACTIONS.NEW_TODO:\n  return [ ...todos, newTodo(name)]\n\n\n\n\n\n\n}\n}\n\n\n\nfunction newTodo(name){\n\nreturn { id: Date.now() , name:name, complete:false }\n\n\n\n}\n\n\n\n  const [todos, dispatch] = useReducer(reducer ,[]);\nconst [name, setName] = useState('')\n\n  // function increment() {\n  //   dispatch({ type: ACTIONS.increment })\n  // };\n\n  // function decrement() {\n  //   dispatch({ type: ACTIONS.decrement })\n  // };\n\n\nfunction handleSubmit(e) {\n\ne.preventDefault()\ndispatch({type: ACTIONS.NEW_TODO , payload:{ name:name }})\nsetName('')\n\n}\n \n// payload is a propertu that gets passed into your dispatch/reducer along with type,\n// type will switch you to the correct case in you dispatch/reducer and payload will have all the details that that case's function will need - payload is itself an object of all the properties / variables you will need in your case function\n\n\n\n// try also with a wrapped invocation\n  return (\n    <div className='container'>\n      <form action=\"\" onSubmit={handleSubmit}  >\n\n\n\n<input \ntype=\"text\"\nvalue={name}\nonChange={ e => setName(e.target.value ) }\n/>\n\n\n\n\n      </form>\n    </div>\n  );\n}\n\n// Pass in a reference to a callback that invokes dispatch not a direct dispatch invocation\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}