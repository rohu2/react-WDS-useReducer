{"ast":null,"code":"var _jsxFileName = \"/Users/admin_user/Desktop/React-useReducer/react-useReducer-start2/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useReducer } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ACTIONS = {\n  ONE: 'one'\n};\n\nfunction App() {\n  _s();\n\n  let initialState = '';\n  const [text, setText] = useState('');\n  const [state, dispatch] = useReducer(reducer, []);\n\n  function reducer(state, action) {\n    switch (action.type) {\n      case ACTIONS.ONE:\n        return [...state, addMe(action.payload)];\n    }\n  }\n\n  function addMe({\n    id,\n    info\n  }) {\n    return {\n      id: id,\n      info: info,\n      completed: false\n    };\n  }\n\n  function submitIt() {\n    const id = Math.round(Math.random() * 10) + 1;\n    dispatch({\n      type: ACTIONS.ONE,\n      payload: {\n        id: id,\n        info: text\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitIt,\n      children: [\"HELLO\", /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"todo\",\n        value: text,\n        onChange: e => setText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"VxRrrZh+PZOo61hOkzBESTmC/dI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/admin_user/Desktop/React-useReducer/react-useReducer-start2/src/App.js"],"names":["React","useState","useReducer","ACTIONS","ONE","App","initialState","text","setText","state","dispatch","reducer","action","type","addMe","payload","id","info","completed","submitIt","Math","round","random","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA2C,OAA3C;AACA,OAAO,WAAP;;AAIA,MAAMC,OAAO,GAAG;AAEhBC,EAAAA,GAAG,EAAG;AAFU,CAAhB;;AASA,SAASC,GAAT,GAAe;AAAA;;AAEb,MAAIC,YAAY,GAAG,EAAnB;AAEA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBR,UAAU,CAACS,OAAD,EAAU,EAAV,CAApC;;AAGF,WAASA,OAAT,CAAiBF,KAAjB,EAAwBG,MAAxB,EAA+B;AAE/B,YAAOA,MAAM,CAACC,IAAd;AAEA,WAAKV,OAAO,CAACC,GAAb;AACE,eAAO,CAAE,GAAGK,KAAL,EAAYK,KAAK,CAACF,MAAM,CAACG,OAAR,CAAjB,CAAP;AAHF;AASC;;AAGD,WAASD,KAAT,CAAe;AAACE,IAAAA,EAAD;AAAKC,IAAAA;AAAL,GAAf,EAA0B;AAE1B,WAAO;AAAED,MAAAA,EAAE,EAACA,EAAL;AAASC,MAAAA,IAAI,EAACA,IAAd;AAAoBC,MAAAA,SAAS,EAAC;AAA9B,KAAP;AAGC;;AAKD,WAASC,QAAT,GAAmB;AAEnB,UAAMH,EAAE,GAAGI,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,IAAiC,CAA5C;AAEAZ,IAAAA,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAACV,OAAO,CAACC,GAAd;AAAmBW,MAAAA,OAAO,EAAC;AAAEC,QAAAA,EAAE,EAACA,EAAL;AAASC,QAAAA,IAAI,EAACV;AAAd;AAA3B,KAAD,CAAR;AAEC;;AAKC,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACE;AAAM,MAAA,QAAQ,EAAEY,QAAhB;AAAA,uCAIN;AACA,QAAA,IAAI,EAAC,MADL;AAEA,QAAA,KAAK,EAAEZ,IAFP;AAGA,QAAA,QAAQ,EAAEgB,CAAC,IAAIf,OAAO,CAACe,CAAC,CAACC,MAAF,CAASC,KAAV;AAHtB;AAAA;AAAA;AAAA;AAAA,cAJM;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GA7DQpB,G;;KAAAA,G;AAiET,eAAeA,GAAf","sourcesContent":["import React, { useState, useReducer} from 'react'\nimport './App.css';\n\n\n\nconst ACTIONS = {\n\nONE : 'one',\n\n}\n\n\n\n\nfunction App() {\n\n  let initialState = ''\n\n  const [text, setText] = useState('')\n  const [state, dispatch] = useReducer(reducer, [])\n\n\nfunction reducer(state, action){\n\nswitch(action.type){\n\ncase ACTIONS.ONE:\n  return [ ...state ,addMe(action.payload)]\n\n\n}\n\n\n}\n\n\nfunction addMe({id, info}){\n\nreturn { id:id, info:info, completed:false  }\n\n\n}\n\n\n\n\nfunction submitIt(){\n\nconst id = Math.round(Math.random() * 10) + 1;\n\ndispatch({type:ACTIONS.ONE ,payload:{ id:id, info:text  }})\n\n}\n\n\n\n\n  return (\n    <div className='container'>\n      <form onSubmit={submitIt}>\n\n\n        HELLO\n<input\nname=\"todo\"\nvalue={text}\nonChange={e => setText(e.target.value)}\n/>\n\n\n\n\n      </form>\n    </div>\n  );\n}\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}